{
    "patches": [
        {
            "label": "2024-12-27_13-17-37",
            "content": "@@ -118,37 +118,8 @@\n QUI%0A\n-        Car car = new Car();%0A\n     \n@@ -133,24 +133,24 @@\n le (true) %7B%0A\n+\n             \n@@ -464,40 +464,8 @@\n RRO%0A\n-                car.toString();%0A\n     \n@@ -568,37 +568,8 @@\n SOA%0A\n-                car.enter();%0A\n     \n@@ -675,37 +675,8 @@\n SOA%0A\n-                car.leave();%0A\n     \n@@ -796,24 +796,26 @@\n             \n+//\n  int increme\n@@ -849,46 +849,8 @@\n %5D);%0A\n-                 car.fuel(increment);%0A\n     \n@@ -973,16 +973,18 @@\n         \n+//\n  int dis\n@@ -1021,46 +1021,8 @@\n %5D);%0A\n-                 car.drive(distance);%0A\n     \n"
        },
        {
            "label": "2024-12-27_13-19-31",
            "content": "@@ -83,15 +83,12 @@\n %5B%5D a\n-rgs\n ) %7B%0A\n+\n     \n@@ -437,24 +437,72 @@\n (%22show%22)) %7B%0A\n+                // MOSTRE OS ATRIBUTOS DO CARRO%0A\n             \n@@ -576,24 +576,69 @@\n %22enter%22)) %7B%0A\n+                // TENTE EMBARCAR UMA PESSOA%0A\n             \n@@ -705,32 +705,80 @@\n als(%22leave%22)) %7B%0A\n+                // TENTE DESEMBARCAR UMA PESSOA%0A\n                 \n@@ -844,24 +844,79 @@\n (%22fuel%22)) %7B%0A\n+                // AUMENTE A QUANTIDADE DE COMBUSTIVEL%0A\n             \n@@ -1007,32 +1007,32 @@\n %0A            %7D %0A\n-\n             else\n@@ -1051,32 +1051,85 @@\n als(%22drive%22)) %7B%0A\n+                // TENTE DIRIGIR UMA CERTA DISTANCIA%0A\n                 \n"
        },
        {
            "label": "2024-12-27_13-21-17",
            "content": "@@ -460,35 +460,16 @@\n         \n-System.out.println(\n car.toSt\n@@ -474,17 +474,16 @@\n String()\n-)\n ;%0A      \n"
        },
        {
            "label": "2024-12-27_13-21-54",
            "content": "import java.util.*;\n\n\npublic class Shell {\n    \n    public static void main(String[] args) {\n        // CRIE SEU CARRO AQUI\n        Car car = new Car();\n        while (true) {\n            var line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            var par = line.split(\" \");\n            var cmd = par[0];\n\n            if (cmd.equals(\"end\")) {\n                break;\n            }\n            else if (cmd.equals(\"show\")) {\n                System.out.println(car.toString());\n            } \n            else if (cmd.equals(\"enter\")) {\n                car.enter();\n            } \n            else if (cmd.equals(\"leave\")) {\n                car.leave();\n            } \n            else if (cmd.equals(\"fuel\")) {\n                 int increment = Integer.parseInt(par[1]);\n                 car.fuel(increment);\n            } \n            else if (cmd.equals(\"drive\")) {\n                 int distance = Integer.parseInt(par[1]);\n                 car.drive(distance);\n            }  \n            else {\n                System.out.println(\"fail: comando invalido\");\n            }\n        }   \n    }\n    private static Scanner scanner = new Scanner(System.in);\n}\n"
        }
    ]
}